# ISEC6000 Secure DevOps
# Assignment 2 Automating Security in CI/CD: Node.js CI/CD with Jenkins
# P2_21920781
# docker compose file with explanations

services:                           
  dind:                             # Service name: dind (Docker-in-Docker)
    image: docker:dind              # Use the official Docker-in-Docker image
    privileged: true                # Run with extended privileges (needed for Docker inside Docker)
    container_name: dind            # Explicit name for the container
    networks:                       # Connect to a custom network
      jenkins:                      # Use the "jenkins" network
        aliases:                    # Set a hostname alias for this container
          - docker                  # Alias "docker" (so Jenkins can reach it as docker:2376)
    expose:                         # Expose ports to other containers (not the host)
      - 2376                        # Docker TLS port (used for secure communication)
    environment:                    # Environment variables inside the container
      - DOCKER_TLS_CERTDIR=/certs   # Directory for TLS certificates
    volumes:                        # Persistent storage and shared data
      - docker-certs-ca:/certs/ca   # Volume for CA certificates
      - docker-certs-client:/certs/client # Volume for client certificates
      - jenkins-data:/var/jenkins_home   # Share Jenkins data with dind

  jenkins:                          # Service name: jenkins (Jenkins automation server)
    image: jenkins/jenkins:lts-jdk17 # Use Jenkins LTS image with JDK 17
    user: root                      # Run as root (needed for Docker access & plugin installs)
    container_name: jenkins         # Explicit container name
    restart: unless-stopped         # Auto-restart unless manually stopped
    networks:                       # Connect to the "jenkins" network
      - jenkins
    environment:                    # Environment variables for Jenkins
      - DOCKER_HOST=tcp://docker:2376   # Tell Jenkins Docker is at docker:2376
      - DOCKER_CERT_PATH=/certs/client  # Path to client certificates
      - DOCKER_TLS_VERIFY=1             # Enable TLS verification
    volumes:                        # Persistent and shared storage
      - docker-certs-client:/certs/client:ro # Mount client certs read-only
      - jenkins-data:/var/jenkins_home       # Jenkins data directory (jobs, configs, plugins)
      - ./jenkins-logs:/var/jenkins_home/logs # Map local logs directory to Jenkins logs
      - /usr/bin/docker:/usr/bin/docker      # Mount host docker binary so Jenkins can run it
    ports:                          # Map ports from host to container
      - 8080:8080                   # Jenkins web UI accessible at http://localhost:8080
      - 50000:50000                 # JNLP agent connections (for build agents)

networks:                           # Define custom networks
  jenkins:                          # Network name
    driver: bridge                  # Use the default bridge driver for isolation

volumes:                            # Declare named volumes (persistent storage)
  docker-certs-ca:                  # Stores CA certificates
  docker-certs-client:              # Stores client certificates
  jenkins-data:                     # Stores Jenkins data (jobs, configs, plugins)
